import React, { useState, useEffect } from 'react';
import { Text, View, TouchableOpacity, FlatList, TextInput } from 'react-native';

interface Item {
  id: number;
  name: string;
}

interface AppProps {
  data: Item[];
}


const SimpleList = ({ data }: AppProps) => {
  const [selectedItemIds, setSelectedItemIds] = useState([]);
  const [dataSource, setDataSource] = useState(data);
  const [searchTerm, setSearchTerm] = useState('');

  useEffect(() => {
    setDataSource(data);
  }, [data]);

  useEffect(() => {
    setTimeout(() => {
      setDataSource(data.filter(item => item.name.includes(searchTerm)));
    }, 1000);
  }, [searchTerm]);

  const handleSelect = (id: number) => {
    const foundIndex = selectedItemIds.indexOf(id);
    const tempIds = [...selectedItemIds];
    if(foundIndex !== -1) {
      setSelectedItemIds(tempIds.splice(0, 1, foundIndex));
    } else {
      setSelectedItemIds(tempIds.push(id));
    }
  };

  const handleClear = () => {
  }

  const renderItem = ({item}: Item) => (
    <TouchableOpacity onPress={() => handleSelect(item.id)}>
      <Text>{item.name}</Text>
      <Text>{selectedItems.includes(item) ? 'Selected' : 'Not selected'}</Text>
    </TouchableOpacity>
    
  )
  return (
    <View>
      <TextInput
        onChangeText={setSearchTerm}
        value={searchTerm}
      />
      <TouchableOpacity onPress={handleClear}>
        <Text>Clear</Text>
      </TouchableOpacity>
      <FlatList
        data={dataSource}
        keyExtractor={item => item.id}
        renderItem={renderItem}
      />
    </View>
  );
};

SimpleList.defaultProps = {
  data: [],
}

export default SimpleList;
